import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useNavigate } from "react-router-dom";
import { useGameStore } from "../store/gameStore";
export function HomeHero() {
    const nav = useNavigate();
    const { settings, setSettings, loadQuestions } = useGameStore();
    const start = async () => {
        await loadQuestions(settings.topic);
        nav("/play");
    };
    return (_jsxs("div", { className: "max-w-3xl mx-auto text-center space-y-6", children: [_jsx("h1", { className: "text-4xl font-extrabold bg-gradient-to-r from-sky-500 via-indigo-500 to-violet-500 bg-clip-text text-transparent", children: "Quiz \u2013 Ph\u00E9p Bi\u1EC7n Ch\u1EE9ng Duy V\u1EADt" }), _jsx("p", { className: "text-gray-600", children: "Ch\u1ECDn ch\u1EE7 \u0111\u1EC1 & ch\u1EBF \u0111\u1ED9 \u0111\u1EC3 b\u1EAFt \u0111\u1EA7u. B\u1EA1n c\u00F3 th\u1EC3 b\u1EADt/t\u1EAFt \u0111\u1EBFm th\u1EDDi gian." }), _jsx("div", { className: "grid grid-cols-1 sm:grid-cols-3 gap-3 text-left", children: ["theory", "examples", "cases"].map((t) => (_jsxs("button", { onClick: () => setSettings({ topic: t }), className: `p-4 rounded-2xl border shadow-sm hover:shadow-md transition ${settings.topic === t ? "bg-sky-50 border-sky-300" : "bg-white"}`, children: [_jsx("h3", { className: "font-semibold capitalize", children: t === "theory" ? "Lý thuyết" : t === "examples" ? "Ví dụ" : "Tình huống" }), _jsx("p", { className: "text-sm text-gray-500 mt-1", children: t === "theory" ? "Định nghĩa & phạm trù" : t === "examples" ? "Minh hoạ đời sống" : "Khởi nghiệp – thất bại – tái khởi nghiệp" })] }, t))) }), _jsx("div", { className: "grid grid-cols-1 sm:grid-cols-2 gap-3", children: ["classic", "speedrun"].map((m) => (_jsxs("button", { onClick: () => setSettings({ mode: m }), className: `p-4 rounded-2xl border shadow-sm hover:shadow-md transition ${settings.mode === m ? "bg-violet-50 border-violet-300" : "bg-white"}`, children: [_jsx("h3", { className: "font-semibold", children: m === "classic" ? "Classic (không countdown)" : "Speedrun (có countdown)" }), _jsx("p", { className: "text-sm text-gray-500 mt-1", children: m === "classic" ? "Làm thoải mái, xem giải thích sau mỗi câu" : "Đếm ngược theo thời gian/câu, combo thưởng" })] }, m))) }), _jsxs("div", { className: "flex items-center justify-center gap-4", children: [_jsxs("label", { className: "flex items-center gap-2", children: [_jsx("input", { type: "checkbox", checked: settings.timed, onChange: (e) => setSettings({ timed: e.target.checked }) }), _jsx("span", { children: "\u0110\u1EBFm th\u1EDDi gian" })] }), _jsxs("label", { className: "flex items-center gap-2", children: [_jsx("span", { children: "Gi\u00E2y/c\u00E2u:" }), _jsx("input", { type: "number", min: 5, max: 60, value: settings.totalTimePerQuestion, onChange: (e) => setSettings({ totalTimePerQuestion: Number(e.target.value) }), className: "w-20 px-2 py-1 border rounded-lg" })] })] }), _jsx("button", { onClick: start, className: "px-6 py-3 rounded-2xl text-white shadow-md bg-gradient-to-r from-sky-400 via-indigo-500 to-violet-600 hover:shadow-lg", children: "B\u1EAFt \u0111\u1EA7u ch\u01A1i" })] }));
}
